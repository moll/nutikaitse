#!/usr/bin/env ruby
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.
#
LANGUAGES = %w[en et]
KINDS = {"guideline" => %r(^/guidelines/[^/]+/$)}
noop = proc {}

preprocess do
  @config[:env] = ENV["NANOC_ENV"] ? ENV["NANOC_ENV"].downcase : "production"

	@items.each do |item|
    KINDS.find do |type, path|
      item[:kind] = type if item.identifier =~ path
    end

    LANGUAGES.find do |lang|
      item[:lang] = lang if item.identifier.end_with?(".#{lang}/")
    end

    # is_hidden is for sidemap
    item[:is_hidden] = true if item[:hidden]
  end
end

layout "*", :haml, :format => :html5
ignore "*/_*/"

compile KINDS["guideline"] do
  filterify item
  layout "guideline"
end

route KINDS["guideline"], &noop

compile "*" do
  filterify item

  if layouts = item[:layout]
    if layouts.is_a? Array
      layouts.each(&method(:layout))
    else
      layout layouts
    end
  end

  relativize item if @config[:env] == "production"
end

route "/guidelines.et/" do "/index.html" end
route "/guidelines.en/" do "/index.en.html" end

route "/_*", &noop

route "*" do routify item end
